<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:security="http://www.springframework.org/schema/security"
 xsi:schemaLocation="http://www.springframework.org/schema/beans	 
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd	
   http://www.springframework.org/schema/security	 
   http://www.springframework.org/schema/security/spring-security-3.2.xsd">
  
 <!-- This is where we configure Spring-Security  -->
 <security:http auto-config="true" pattern="/happ/admin/**" use-expressions="true" access-denied-page="/happ/admin" >
  
  <security:intercept-url pattern="/happ/admin/" access="permitAll"/>
  <security:intercept-url pattern="/happ/admin/login" access="permitAll"/>
  <security:intercept-url pattern="/happ/admin/**" access="hasRole('ROLE_ADMIN')"/>
  <!-- <security:intercept-url pattern="/krams/main/common" access="hasRole('ROLE_USER')"/> -->
   
 <security:form-login login-processing-url="/happ/admin/j_admin_security_check"
    login-page="/happ/admin/login"
    authentication-failure-url="/happ/admin/login?error=true"
    default-target-url="/happ/admin/rooms"/>
    
    <security:logout
    invalidate-session="true"
    logout-success-url="/happ/admin/login"
    logout-url="/happ/admin/logout"/>   
    
   
 </security:http>
 
  <!-- This is where we configure Spring-Security  -->
 <security:http auto-config="true" pattern="/happ/site/**" use-expressions="true" access-denied-page="/happ/site/home" >
   
   
  <security:intercept-url pattern="/happ/site/" access="permitAll"/>
  <security:intercept-url pattern="/happ/site/regUser" access="permitAll"/>
  <security:intercept-url pattern="/happ/site/home" access="permitAll"/>
  <security:intercept-url pattern="/happ/site/contactus" access="permitAll"/>
  <security:intercept-url pattern="/happ/site/download" access="permitAll"/>
  <security:intercept-url pattern="/happ/site/astrology" access="permitAll"/>
  <security:intercept-url pattern="/happ/site/site_forget_password" access="permitAll"/>
  <security:intercept-url pattern="/happ/site/genpass/**" access="permitAll"/>
  <security:intercept-url pattern="/happ/site/forgetpassword" access="permitAll"/>
  <security:intercept-url pattern="/happ/site/user_new_login" access="permitAll"/>
  <security:intercept-url pattern="/happ/site/**" access="hasRole('ROLE_USER')"/>
 
 <security:form-login login-processing-url="/happ/site/j_user_security_check"
    login-page="/happ/site/home"
    authentication-failure-url="/happ/site/login?error=true"
    default-target-url="/happ/site/loginsuccess"/>
    
    <security:logout
    invalidate-session="true"
    logout-success-url="/happ/site/home"
    logout-url="/happ/site/logout"/>
   
   <!--  -->
  <!--  <security:remember-me services-ref="rememberMeServices"/> -->
   <!--  -->
   
 </security:http>
  
 <!-- Declare an authentication-manager to use a custom userDetailsService -->
 <security:authentication-manager>
         <security:authentication-provider user-service-ref="adminUserDetailsService">
           <security:password-encoder ref="passwordEncoder"/>
         </security:authentication-provider>
         <security:authentication-provider user-service-ref="registeredUserDetailsService">
           <security:password-encoder ref="passwordEncoder"/>
         </security:authentication-provider>
 </security:authentication-manager>
  
 <!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the database -->
 <bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>
 
 <!-- A custom service where Spring will retrieve users and their corresponding access levels  -->
 <bean id="adminUserDetailsService" class="com.housee.app.security.AdminUserDetailsService"/>
  

 <!-- A custom service where Spring will retrieve users and their corresponding access levels  -->
 <bean id="registeredUserDetailsService" class="com.housee.app.security.RegisterUserDetailService"/>
  
 <!--  -->
<!--  <bean id="rememberMeServices"
      class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
    <constructor-arg value="myAppKey"/>
    <constructor-arg ref="registeredUserDetailsService"/>
    <constructor-arg ref="tokenRepository"/>
    <property name="cookieName" value="remember-me"/>
    <property name="tokenLength" value="32"/>
    <property name="parameter" value="remember-me-parameter"/>
 </bean>

<bean id="tokenRepository"
      class="org.springframework.security.web.authentication.rememberme.InMemoryTokenRepositoryImpl">
</bean> -->
 
 <!--  -->
  
</beans>