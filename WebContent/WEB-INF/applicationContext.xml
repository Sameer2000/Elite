<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
	http://www.springframework.org/schema/task
 	http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />

	<!-- Scans the classpath for annotated components that will be auto-registered 
		as Spring beans. For example @Controller and @Service. Make sure to set the 
		correct base-package -->
	<context:component-scan base-package="com.innverse.elearn.controller"/>

	<!-- Configures the annotation-driven Spring MVC Controller programming 
		model. Note that, with Spring 3.0, this tag works in Servlet MVC only! -->
	<mvc:annotation-driven />
	
	 <!-- Activates @Scheduled and @Async annotations for scheduling -->
 	<task:annotation-driven />

 	<!-- Load Hibernate related configuration -->
	<import resource="hibernate-context.xml" />
	
	<bean id="userProfile" class="com.innverse.elearn.model.UserProfile"></bean>
		
	<bean id="commonServiceImpl" class="com.innverse.elearn.services.CommonServiceImpl"></bean>
	
	<bean id="adminServiceImpl" class="com.innverse.elearn.services.AdminServiceImpl"></bean>
	
	<bean id="paymentTransactionServiceImpl" class="com.innverse.elearn.services.PaymentTransactionServiceImpl"></bean>
		
	<bean id="testmail" class="com.innverse.elearn.mail.Testmail"></bean>
	
	<bean id="commonDao" class="com.innverse.elearn.dao.CommonDaoImpl">
	    	<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<bean id="adminDao" class="com.innverse.elearn.dao.AdminDaoImpl">
	    	<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<bean id="paymentDaoImpl" class="com.innverse.elearn.dao.PaymentDaoImpl">
	    	<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
	
	<bean id="paymentService" class="com.innverse.elearn.services.PaymentTransactionServiceImpl">
	    <property name="ppSetEC">
	         <bean class="com.innverse.elearn.paypal.express.checkout.ECSetExpressCheckout"/>
	    </property>
	    <property name="ppGetEC">
	         <bean class="com.innverse.elearn.paypal.express.checkout.ECGetExpressCheckout"/>
	    </property>
	    <property name="ppDoEC">
	         <bean class="com.innverse.elearn.paypal.express.checkout.ECDoExpressCheckout"/>
	    </property>
	</bean>
	
	
	
	<bean id="properties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:elite-${ELMS}.properties</value>
            </list>
        </property>
 	</bean>
 
<!-- 	<bean id="placeHolder" 
    class="org.springframework.beans.factory.config.PropertiesPlaceholderConfigurer">
	    <property name="properties" ref="properties"/>
	    <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
	    <property name="searchSystemEnvironment" value="true"/>
	</bean> -->

	<bean id="config" class="com.innverse.elearn.config.Config" factory-method="setInstance">
	    <constructor-arg ref="properties" />
	</bean>
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	    <!-- one of the properties available; the maximum file size in bytes -->
    	<property name="maxUploadSize" value="100000000"/>
	</bean>

	<bean id="scormService" class="com.innverse.elearn.scorm.ScormService"></bean>
		
	<bean id="aiccService" class="com.innverse.elearn.scorm.AICCService"></bean>

	<bean id="scormDao" class="com.innverse.elearn.dao.ScormDao">
	    	<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>
			
</beans>	